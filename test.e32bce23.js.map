{"version":3,"sources":["scripts/test.js"],"names":["describe","makeTest","x","expected","it","assert","equal","pow","isNaN"],"mappings":";AAAAA,SAAS,MAAO,WAEZA,SAAS,yBAA0B,WAEtBC,SAAAA,EAAUC,GACTC,IAAAA,EAAWD,EAAIA,EAAIA,EACzBE,GAAG,kBAAoBF,EAAI,2BAA6BC,EAAU,WAC9DE,OAAOC,MAAMC,IAAIL,EAAG,GAAIC,KAI3B,IAAA,IAAID,EAAI,EAAGA,GAAK,EAAGA,IACpBD,EAASC,KAKjBE,GAAG,uDAAwD,WACvDC,OAAOG,MAAMD,IAAI,GAAI,IAAK,uBAG9BH,GAAG,iDAAkD,WACjDC,OAAOG,MAAMD,IAAI,EAAG,MAAO,yBAG/BP,SAAS,+CAAgD,WAE5CC,SAAAA,EAAUC,GACfE,GAAG,kBAAoBF,EAAI,4BAA6B,WACpDG,OAAOC,MAAMC,IAAIL,EAAG,GAAI,KAI3B,IAAA,IAAIA,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAC1BD,EAASC","file":"test.e32bce23.js","sourceRoot":"../src","sourcesContent":["describe(\"pow\", function () {\n\n    describe(\"возводит x в степень n\", function () {\n\n        function makeTest (x) {\n            const expected = x * x * x;\n            it(\"при возведении \" + x + \" в степень 3 результат: \" + expected, function () {\n                assert.equal(pow(x, 3), expected);\n            });\n        }\n\n        for (let x = 1; x <= 5; x++) {\n            makeTest(x);\n        }\n\n    });\n\n    it(\"при возведении в отрицательную степень результат NaN\", function () {\n        assert(isNaN(pow(2, -1)), \"pow(2, -1) не NaN\");\n    });\n\n    it(\"при возведении в дробную степень результат NaN\", function () {\n        assert(isNaN(pow(2, 1.5)), \"pow(2, -1.5) не NaN\");\n    });\n\n    describe(\"любое число, кроме нуля, в степени 0 равно 1\", function () {\n\n        function makeTest (x) {\n            it(\"при возведении \" + x + \" в степень 0 результат: 1\", function () {\n                assert.equal(pow(x, 0), 1);\n            });\n        }\n\n        for (let x = -5; x <= 5; x += 2) {\n            makeTest(x);\n        }\n\n    });\n\n});\n"]}